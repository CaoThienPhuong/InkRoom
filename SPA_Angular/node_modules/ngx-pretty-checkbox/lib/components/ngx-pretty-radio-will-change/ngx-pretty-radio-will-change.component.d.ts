import { EventEmitter, QueryList } from '@angular/core';
import { PrettyCheckboxAnimation, PrettyCheckBoxChange, PrettyCheckboxColor, PrettyCheckboxShape, PrettyCheckboxStroke } from '../../model/interfaces';
import { NgxPrettyRadioGroupDirective } from '../../directives/ngx-pretty-radio-group.directive';
import { NgxPrettyHoverWillChangeComponent } from '../ngx-pretty-hover-will-change/ngx-pretty-hover-will-change.component';
import { NgxPrettyToggleWillChangeComponent } from '../ngx-pretty-toggle-will-change/ngx-pretty-toggle-will-change.component';
import { NgxPrettyIconDirective } from '../../directives/ngx-pretty-icon.directive';
import { NgxPrettyImageDirective } from '../../directives/ngx-pretty-image.directive';
import { NgxPrettySvgDirective } from '../../directives/ngx-pretty-svg.directive';
import { NgxPrettyHoverComponent } from '../ngx-pretty-hover/ngx-pretty-hover.component';
import { NgxPrettyToggleComponent } from '../ngx-pretty-toggle/ngx-pretty-toggle.component';
import * as ɵngcc0 from '@angular/core';
export declare class NgxPrettyRadioWillChangeComponent {
    private radioGroup;
    constructor(radioGroup: NgxPrettyRadioGroupDirective);
    private _inputElem;
    change: EventEmitter<PrettyCheckBoxChange>;
    stroke: PrettyCheckboxStroke;
    shape: PrettyCheckboxShape;
    animation: PrettyCheckboxAnimation;
    color: PrettyCheckboxColor;
    outline: boolean;
    checked: boolean;
    disabled: boolean;
    value: any;
    radioGroupName: string;
    name: string;
    isSwitch: boolean;
    lock: boolean;
    bigger: boolean;
    enableFocus: boolean;
    plain: boolean;
    get _isFill(): boolean;
    get _isSlim(): boolean;
    get _isThick(): boolean;
    get _isCurve(): boolean;
    get _isRound(): boolean;
    get _isSmooth(): boolean;
    get _isJelly(): boolean;
    get _isTada(): boolean;
    get _isRotate(): boolean;
    get _isPulse(): boolean;
    _toggleComp: QueryList<NgxPrettyToggleComponent>;
    _toggleWillChangeComp: QueryList<NgxPrettyToggleWillChangeComponent>;
    get _isToggle(): boolean;
    get _isDefault(): boolean;
    _iconElem: NgxPrettyIconDirective;
    _svgElem: NgxPrettySvgDirective;
    _imageElem: NgxPrettyImageDirective;
    _hoverWillChangeDir: NgxPrettyHoverWillChangeComponent;
    _hoverComp: NgxPrettyHoverComponent;
    get _isHover(): NgxPrettyHoverWillChangeComponent | NgxPrettyHoverComponent;
    _onChange(event: Event, checked: boolean, value: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPrettyRadioWillChangeComponent, [{ optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxPrettyRadioWillChangeComponent, "ngx-pretty-radio[will-change], p-radio[will-change]", ["ngxPrettyRadio"], { "outline": "outline"; "checked": "checked"; "disabled": "disabled"; "isSwitch": "isSwitch"; "lock": "lock"; "bigger": "bigger"; "enableFocus": "enableFocus"; "plain": "plain"; "stroke": "stroke"; "shape": "shape"; "animation": "animation"; "color": "color"; "value": "value"; "name": "name"; }, { "change": "change"; }, ["_iconElem", "_svgElem", "_imageElem", "_hoverWillChangeDir", "_hoverComp", "_toggleComp", "_toggleWillChangeComp"], ["[pIcon], [p-icon], [pSvg], [p-svg], [pImage], [p-image]", "*", "ngx-p-indeterminate, p-indeterminate, ngx-p-hover, p-hover, ngx-p-toggle, p-toggle"]>;
}

//# sourceMappingURL=ngx-pretty-radio-will-change.component.d.ts.map