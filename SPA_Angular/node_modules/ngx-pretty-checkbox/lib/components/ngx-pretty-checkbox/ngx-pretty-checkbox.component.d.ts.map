{"version":3,"file":"ngx-pretty-checkbox.component.d.ts","sources":["ngx-pretty-checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, QueryList, AfterViewInit, Renderer2, ChangeDetectorRef } from '@angular/core';\r\nimport { PrettyCheckboxAnimation, PrettyCheckBoxChange, PrettyCheckboxColor, PrettyCheckboxShape, PrettyCheckboxStroke } from '../../model/interfaces';\r\nimport { NgxPrettyToggleWillChangeComponent } from '../ngx-pretty-toggle-will-change/ngx-pretty-toggle-will-change.component';\r\nimport { NgxPrettyToggleComponent } from '../ngx-pretty-toggle/ngx-pretty-toggle.component';\r\nexport declare class NgxPrettyCheckboxComponent implements AfterViewInit {\r\n    private renderer;\r\n    private el;\r\n    private cd;\r\n    private _stroke;\r\n    private _shape;\r\n    private _animation;\r\n    private _isSwitch;\r\n    private _bigger;\r\n    private _enableFocus;\r\n    private _plain;\r\n    private _outline;\r\n    private _color;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n    value: any;\r\n    lock: boolean;\r\n    private _inputElem;\r\n    private _stateElem;\r\n    change: EventEmitter<PrettyCheckBoxChange>;\r\n    private _iconDir;\r\n    private _svgDir;\r\n    private _imgDir;\r\n    private _hoverDir;\r\n    private _hoverWillChangeDir;\r\n    private _indeterminateDir;\r\n    private _indeterminateWillChangeDir;\r\n    _toggleComps: QueryList<NgxPrettyToggleComponent>;\r\n    _toggleWillChangeComps: QueryList<NgxPrettyToggleWillChangeComponent>;\r\n    constructor(renderer: Renderer2, el: ElementRef, cd: ChangeDetectorRef, _stroke: PrettyCheckboxStroke, _shape: PrettyCheckboxShape, _animation: PrettyCheckboxAnimation, _isSwitch: boolean, _bigger: boolean, _enableFocus: boolean, _plain: boolean, _outline: boolean, _color: PrettyCheckboxColor);\r\n    ngAfterViewInit(): void;\r\n    _onChange(event: Event, checked: boolean, value: string): void;\r\n    get _isToggle(): boolean;\r\n    setIndeterminate(value?: boolean): void;\r\n    forceCheck(check: boolean): void;\r\n}\r\n"]}