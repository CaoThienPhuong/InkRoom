import { ElementRef, EventEmitter, QueryList, AfterViewInit, Renderer2 } from '@angular/core';
import { PrettyCheckboxAnimation, PrettyCheckboxColor, PrettyCheckboxShape, PrettyCheckboxStroke, PrettyRadioChange } from '../../model/interfaces';
import { NgxPrettyRadioGroupDirective } from '../../directives/ngx-pretty-radio-group.directive';
import { NgxPrettyToggleWillChangeComponent } from '../ngx-pretty-toggle-will-change/ngx-pretty-toggle-will-change.component';
import { NgxPrettyToggleComponent } from '../ngx-pretty-toggle/ngx-pretty-toggle.component';
import * as ɵngcc0 from '@angular/core';
export declare class NgxPrettyRadioComponent implements AfterViewInit {
    private renderer;
    private el;
    private radioGroup;
    private _stroke;
    private _shape;
    private _animation;
    private _isSwitch;
    private _bigger;
    private _enableFocus;
    private _plain;
    private _outline;
    private _color;
    _name: string;
    checked: boolean;
    disabled: boolean;
    value: any;
    lock: boolean;
    private _inputElem;
    private _stateElem;
    change: EventEmitter<PrettyRadioChange>;
    private _iconDir;
    private _svgDir;
    private _imgDir;
    private _hoverDir;
    private _hoverWillChangeDir;
    _toggleComps: QueryList<NgxPrettyToggleComponent>;
    _toggleWillChangeComps: QueryList<NgxPrettyToggleWillChangeComponent>;
    constructor(renderer: Renderer2, el: ElementRef, radioGroup: NgxPrettyRadioGroupDirective, _stroke: PrettyCheckboxStroke, _shape: PrettyCheckboxShape, _animation: PrettyCheckboxAnimation, _isSwitch: boolean, _bigger: boolean, _enableFocus: boolean, _plain: boolean, _outline: boolean, _color: PrettyCheckboxColor, _name: string);
    ngAfterViewInit(): void;
    _onChange(event: Event, checked: boolean, value: string): void;
    get _isToggle(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPrettyRadioComponent, [null, null, { optional: true; }, { attribute: "stroke"; }, { attribute: "shape"; }, { attribute: "animation"; }, { attribute: "isSwitch"; }, { attribute: "bigger"; }, { attribute: "enableFocus"; }, { attribute: "plain"; }, { attribute: "outline"; }, { attribute: "color"; }, { attribute: "name"; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxPrettyRadioComponent, "ngx-pretty-radio:not([will-change]), p-radio:not([will-change])", ["ngxPrettyRadio"], { "checked": "checked"; "disabled": "disabled"; "lock": "lock"; "value": "value"; }, { "change": "change"; }, ["_iconDir", "_svgDir", "_imgDir", "_hoverDir", "_hoverWillChangeDir", "_toggleComps", "_toggleWillChangeComps"], ["[pIcon], [p-icon], [pSvg], [p-svg], [pImage], [p-image]", "*", "ngx-p-hover, p-hover, ngx-p-toggle, p-toggle"]>;
}

//# sourceMappingURL=ngx-pretty-radio.component.d.ts.map